{
  "name": "sails-cassandra",
  "description": "Apache Cassandra 2.x adapter for Sails/Waterline",
  "version": "0.10.9",
  "author": {
    "name": "Alkeron Multimedia Inc.",
    "email": "info@alkeron.com"
  },
  "contributors": [
    {
      "name": "dtoubelis"
    }
  ],
  "scripts": {
    "test": "make test"
  },
  "main": "./lib/adapter.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dtoubelis/sails-cassandra.git"
  },
  "bugs": {
    "url": "https://github.com/dtoubelis/sails-cassandra/issues"
  },
  "keywords": [
    "sails",
    "waterline",
    "cassandra",
    "orm"
  ],
  "dependencies": {
    "async": "~0.9.0",
    "cassandra-driver": "~2.0.0",
    "lodash": "~2.4.0",
    "long": "~2.2.0",
    "through2": "~0.6.3",
    "waterline-errors": "~0.10.0"
  },
  "devDependencies": {
    "captains-log": "~0.11.5",
    "jshint": "~2.6.3",
    "mocha": "~2.2.0",
    "waterline": "~0.10.0",
    "waterline-adapter-tests": "~0.10.7"
  },
  "waterlineAdapter": {
    "waterlineVersion": "~0.10.0",
    "interfaces": [
      "semantic"
    ]
  },
  "license": "MIT",
  "readme": "[![Build Status][buildImg]][buildURL] [![Dependency Status][depImg]][depURL] [![npmImg][npmImg]][npmURL]\n\n[buildImg]: https://travis-ci.org/dtoubelis/sails-cassandra.svg?branch=master\n[buildURL]: https://travis-ci.org/dtoubelis/sails-cassandra\n\n[depImg]: https://gemnasium.com/dtoubelis/sails-cassandra.svg\n[depURL]: https://gemnasium.com/dtoubelis/sails-cassandra\n\n[npmImg]: https://badge.fury.io/js/sails-cassandra.svg\n[npmURL]: http://badge.fury.io/js/sails-cassandra\n\n\n# sails-cassandra\nApache Cassanda 2.+ database adapter for Sails/Waterline\n\n> Implements:\n> - [Semantic](https://github.com/balderdashy/sails-docs/blob/master/contributing/adapter-specification.md#semantic-interface)\n>   - .create()\n>   - .createEach()\n>   - .find()\n>   - .count()\n>   - .update()\n>   - .destroy()\n> - [Migratable](https://github.com/balderdashy/sails-docs/blob/master/contributing/adapter-specification.md#migratable-interface)\n>   - .define()\n>   - .describe()\n>   - .drop()\n> - [Iterable](https://github.com/balderdashy/sails-docs/blob/master/contributing/adapter-specification.md#iterable-interface)\n>   - .stream()\n\n\n## 1. Installation\nInstall from NPM.\n\n```bash\n# In your app:\n$ npm install sails-cassandra\n```\n\n## 2. Configuring Sails\nAdd the `cassandra` configuration to the `config/connections.js` file. The basic\noptions are as follows:\n\n```javascript\nmodule.exports.connections = {\n\n  my-cassandra-connection: {\n\n    module        : 'sails-cassandra',\n\n    // typical sails/waterline options (see comment below)\n    user          : 'username',\n    password      : 'password',\n\n    // cassandra driver options\n    contactPoints : [ '127.0.0.1' ],\n    keyspace      : 'keyspace name',\n    ...\n  }\n};\n```\n\nAnd then change default model configuration in the `config/models.js`:\n\n```javascript\nmodule.exports.models = {\n  connection: 'my-cassandra-connection'\n};\n```\n\nAdapter configuration may contain any of [Cassandra client options].\nHowever, you probably will only need `contactPoints` and `keyspace` to get\nstarted and the adapter will provide reasonable defaults for the rest.\n\n[Cassandra client options]: http://www.datastax.com/documentation/developer/nodejs-driver/2.0/common/drivers/reference/clientOptions.html\n\nAuthentication information for `cassandra-driver` is typically supplied in\n`authProvider` option, however `sails-cassandra` adapter will also recognize\n`user` and `password` options and convert them into `authProvider` overriding\nan existing value. This also means that if you wish to use your own `authProvider`\nyou will need to remove `user` and `password` from the configuration.  \n\n\n## 3. Running Tests\nYou can set environment variables to override the default database configuration\nfor running tests as follows:\n\n```sh\n$ WATERLINE_ADAPTER_TESTS_PASSWORD=yourpass npm test\n```\n\n\nDefault settings are:\n\n```javascript\n{\n  contactPoints: [ process.env.WATERLINE_ADAPTER_TESTS_HOST || '127.0.0.1' ],\n  user: process.env.WATERLINE_ADAPTER_TESTS_USER || 'root',\n  password: process.env.WATERLINE_ADAPTER_TESTS_PASSWORD || '',\n  keyspace: process.env.WATERLINE_ADAPTER_TESTS_DATABASE || 'test'\n}\n```\n\n> **Note:** Default name of the keyspace for running tests is `test`. Make\n> sure you created it in your database before executing `npm test`.\n\n\n## 4. Implementation Notes\nThis section describes behaviour of Apache Cassandra adapter that is distinct\nfrom other database types.\n\n\n### 4.1. Naming of tables and columns\nColumn and table names in Cassandra are case insensitive and this ambiguity\nmakes it difficult to map between attribute names that are case sensitive and\ncolumn names that are not. There are two possible workarounds for this:\n\n1. There is a mechanism in Apache Cassandra to make table/column names case\n   sensitive by including them in double quotes. This may seem as a good idea on\n   the surface but it does not cover a use case when tables are not created by\n   sails/waterline but by an external process.\n \n2. Converting table/column names to lower case is an another approach. This way\n   we always convert table/column names to lower case before mapping them\n   to/from attribute names. This is not very elegant but it works and this is\n   the current preferred approach.\n\n\n### 4.2. Autoincrement\nThe autoincrement feature was plaguing ORM frameworks right from their inseption\nas it requires 1-2 extra queries in order to retrieve new record identifier from\nunderlying database into the framework. It also does not work very well with\nsharding and replication.\n\nCassandra database does not support autoincrement, however it achieves the same\nfunctionality in a much more efficient way by using time based UUIDs (a.k.a.\nType 1 UUID) for primary keys.\n\nSails/Waterline supports autoincrement and its implementation is heavily\ninfluenced by MySQL database. The `sails-cassandra` adapter makes an attempt to\nachieve the same functionality using the following rules:\n\n1. Model attribute that represents primary key may have `autoIncrement`\n   property set to `true`.\n\n2. This automatically forces attribute type to `string` and supersedes any other\n   declarations. The adapter will give a warning message is there is a\n   discrepancy.\n\n3. The value of the primary key cannot be overridden by `create()` or `update()`\n   calls once `autoIncrement` property is enabled. You will see a (non-lethal)\n   warning message if such attempt is made.\n\n> **Note**: This logic is inconsistent with the current Sails/Waterline\n> specifications as it requires `autoIncrement` field to be of type `integer`.\n> Please use discretion. Also, see [this issue].\n\n[this issue]: https://github.com/balderdashy/waterline/issues/909\n\n\n### 4.3. Type conversion between Cassandra and Sails/Waterline\nThe following table represents mappings between Sails/Waterline model data types\nand Apache Cassandra data types:\n\n| Sails/Waterline Type | JS Type  | Cassandra Type                    |\n|:---------------------|:---------|:----------------------------------|\n| string               | String   | text (UTF-8 text)                 |\n| text                 | String   | text (UTF-8 text)                 |\n| integer              | Number   | bigint (64-bit signed integer)    |\n| float                | Number   | double (64-bit float)             |\n| date                 | Date     | timestamp                         |\n| datetime             | Date     | timestamp                         |\n| boolean              | Boolean  | boolean                           |\n| binary               | [Buffer] | blob                              |\n| array                | Array    | list<text>                        |\n| json                 | ???      | text (UTF-8 text)                 |\n| email                | String   | ascii (US-ASCII character string) |\n| autoIncrement=true   | String   | timeuuid                          |\n\n\nThe following table may be used as a guideline when creating Sails/Waterline\nmodels for existing tables:\n\n| Cassandra Type | Type Id | Driver JS type | Waterline JS Type | Waterline Type       |\n|:---------------|:-------:|:---------------|:------------------|:---------------------|\n| ascii          | 1       | String         | String            | string               |\n| bigint         | 2       | [Long]         | Number or NaN     | integer              |\n| blob           | 3       | [Buffer]       | [Buffer]          | binary               |\n| boolean        | 4       | Boolean        | Boolean           | boolean              |\n| counter        | 5       | [Long]         | Number or NaN     | integer              |\n| decimal        | 6       | [BigDecimal]   | Number or NaN     | float                |\n| double         | 7       | Number         | Number            | float                |\n| float          | 8       | Number         | Number            | float                |\n| inet           | 16      | [InetAddress]  | String            | string               |\n| int            | 9       | Number         | Number            | integer              |\n| list           | 32      | Array          | Array             | array                |\n| map            | 33      | Object         | Null              | not supported (null) |\n| set            | 34      | Array          | Null              | not supported (null) |\n| text           | 10      | String         | String            | text                 |\n| timestamp      | 11      | Date           | Date              | datetime or date     |\n| timeuuid       | 15      | [TimeUuid]     | String            | string               |\n| uuid           | 12      | [Uuid]         | String            | string               |\n| varchar        | 13      | String         | String            | text                 |\n| varint         | 14      | [Integer]      | Number or NaN     | integer              |\n\n[Buffer]: https://nodejs.org/api/buffer.html\n\n[Long]: http://www.datastax.com/drivers/nodejs/2.0/module-types-Long.html\n\n[BigDecimal]: http://www.datastax.com/drivers/nodejs/2.0/module-types-BigDecimal.html\n\n[InetAddress]: http://www.datastax.com/drivers/nodejs/2.0/module-types-InetAddress.html\n\n[TimeUuid]: http://www.datastax.com/drivers/nodejs/2.0/module-types-TimeUuid.html\n\n[Uuid]: http://www.datastax.com/drivers/nodejs/2.0/module-types-Uuid.html\n\n[Integer]: http://www.datastax.com/drivers/nodejs/2.0/module-types-Integer.html\n\n\n### 4.4. Use of indexes\nApache Cassandra require index on a column that is used in `where` clause of\n`select` statement and unlike other database it will produce and exception if\nthe index is missing.\n\nSails/Waterline allows to set `index` or `unique` properties on model\nattributes. The `sails-cassanda` adapter will respect these attributes and it\nwill create indexes for attributes with `index` or `unique` attributes set to\n`true`.\n\n> **Note**: that Apache Cassandra have no notion of `unique` constraint and\n> the uniqueness has to be enforced either by Sails/Waterline core or in your\n> own code. The `unique` attribute property is considered an alias for `index`\n> and both are treated in the exactly same way.\n\n### 4.5. Search criteria\nApache Cassandra only supports subset of operation in selection criteria in\ncomparison to relational databases and this section describes what is currently\nsupported.\n\n\n#### 4.5.1. Key Pairs\nThis is an exact match criteria and it is declared as follows:\n\n```javascript\nModel.find({firstName: 'Joe', lastName: 'Doe'});\n```\n\nIt is supported and it will be executed as follows:\n\n```\nSELECT id, first_name, last_name\n  FROM users\n  WHERE first_name = 'Joe' AND last_name = 'Doe'\n  ALLOW FILTERING;\n```\nPlease also refer to [Use of Indexes](#44-use-of-indexes) above.\n\n\n#### 4.5.2. Modified Pair\nThis criteria:\n\n```javascript\nModel.find({age: {'>': 18, 'lessThanOrEqual': 65});\n```\n\nwill be converted to CQL query that may look like this:\n\n```\nSELECT id,first_name,last_name\n  FROM users\n  WHERE age > 18 AND age <= 65\n  ALLOW FILTERING;\n```\n\nand supported operations are as follows:\n\n| Operation              | Shorthand | Supported |\n|:-----------------------|:---------:|:---------:|\n| `'lessThan'`           |  `'<'`    |    Yes    |\n| `'lessThanOrEqual'`    |  `'<='`   |    Yes    |\n| `'greaterThan'`        |  `'>'`    |    Yes    |\n| `'greaterThanOrEqual'` |  `'>='`   |    Yes    |\n| `'not'`                |  `'!'`    |  **No**   |\n| `'like'`               |  `none`   |  **No**   |\n| `'contains'`           |  `none`   |  **No**   |\n| `'startsWith'`         |  `none`   |  **No**   |\n| `'endsWith'`           |  `none`   |  **No**   |\n\n    \n#### 4.5.3. In Pairs\nThis criteria:\n\n```javascript\nModel.find({title: ['Mr', 'Mrs']});\n```\n\nwill be rendered into the following CQL statement:\n\n```\nSELECT id, first_name, last_name\n  FROM users\n  WHERE title IN ( 'Mr', 'Mrs' )\n  ALLOW FILTERING;\n```\n> **Note:** that `IN` criterion works differently in Apache Cassandra. It is\n> subject of [certain limitations] and is considered a pattern to be avoided.\n\n[certain limitations]: http://www.datastax.com/documentation/cql/3.1/cql/cql_reference/select_r.html?scroll=reference_ds_d35_v2q_xj__selectIN\n\n\n#### 4.5.4. Not-In Pair\n**Not supported** since Apache Cassandra does not support `NOT IN` criterion,\nso this construct:\n\n```javascript\nModel.find({name: {'!': ['Walter', 'Skyler']}});\n```\n\nwill cause adapter to throw an exception.\n\n\n#### 4.5.5. Or Pairs\n**Not supported** since Apache Cassandra has no `OR` criterion, so this construct:\n\n```javascript\nModel.find({\n  or : [\n    {name: 'walter'},\n    {occupation: 'teacher'}\n  ]\n});\n```\n\nwill cause the adapter to throw an exception.\n\n#### 4.5.6. Limit, Sort, Skip\nOnly `limit` is curently implemented and works as expected.\n\n`sort` is supported but if the column requested to sort is not a clustering column then cassandra will throw an error.\n\n`skip` is not supported and silently ignored if provided.\n\n### 4.6 Raw cql query\n\nRaw cql query exposes cassadra-driver interfaces and is a way to implement functionality specific to cassandra only, such as using map and set data types and other cassandra specific queries.\n\n```javascript\nModel.query(\"Select * from table where col1=? and col2=?\",['value1','value2'],function(err,results){\n    if(err) console.log(err);\n    else console.log(results);\n});\n```\n\nIt also supports batch queries, you just need to supply array of queries and array of value arrays.\n\n### 4.7 Compound Primary Key Support\n\nCassandra is different in terms of how it defines primary keys compared to other common databases. Compound primary key is a unique feature why people would actually use cassandra. Because in cql compound primary key with one partition key and one or more clustering columns enables big table wide rows functionality. \n\nBut in waterline, there is no such concept as of now to define compound primary key support. So I've chosen an existing waterline model attribute named \"on\" that can be used along with primaryKey=true for the same column, we can define a compound primary key. The traditional functionality of the \"on\" attribute will work as expected with columns other than the primary key, which is fine as the traditional \"on\" attribute used with primaryKey attribute would be meaningless before this.\n\n```javascript\nmodule.exports = {\n\n  autoPK: false,\n  \n  attributes: {\n    ...\n    my_partition_key: {\n      type: 'string',\n      required: true,\n      primaryKey: true,\n      on: ['my_clustering_key1','my_clustering_key2']\n    },\n    my_clustering_key1: {\n      type: 'text',\n      required: true\n    },\n    my_clustering_key1: {\n      type: 'text',\n      required: true\n    }\n  }\n\n};\n```\n\n\n## 5. License\nSee [LICENSE.md](./LICENSE.md) file for details.\n\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/dtoubelis/sails-cassandra",
  "_id": "sails-cassandra@0.10.9",
  "_shasum": "840f9a47ea6224897bd69b4e7a512ae06a4b8332",
  "_from": "https://github.com/masumsoft/sails-cassandra/tarball/develop",
  "_resolved": "https://github.com/masumsoft/sails-cassandra/tarball/develop"
}
